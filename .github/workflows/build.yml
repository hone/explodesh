name: Build

on: [push]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: test
  build-linux:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target x86_64-unknown-linux-musl
      - name: Strip Binary
        run: strip target/x86_64-unknown-linux-musl/release/explodesh
      - uses: actions/upload-artifact@v2
        with:
          name: explodesh-linux
          path: target/x86_64-unknown-linux-musl/release/explodesh
  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - uses: actions/upload-artifact@v2
        with:
          name: explodesh-windows
          path: target/release/explodesh.exe
  build-macos:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Strip Binary
        run: strip target/release/explodesh
      - uses: actions/upload-artifact@v2
        with:
          name: explodesh-macos
          path: target/release/explodesh

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: 'Get Version'
        id: version
        run: |
          [[ $GITHUB_REF =~ ^refs\/tags\/(.*)$ ]] && VERSION=${BASH_REMATCH[1]}
          echo "::set-output name=version::$VERSION"
      - name: 'Download Linux binary'
        uses: actions/download-artifact@v2
        with:
          name: explodesh-linux
      - name: Package Linux Tarball
        run: |
          ls -l
          chmod +x explodesh
          tar -vzcf linux.tgz explodesh
          rm explodesh
      - name: 'Download Windows binary'
        uses: actions/download-artifact@v2
        with:
          name: explodesh-windows
      - name: Package Windows Tarball
        run: |
          chmod +x explodesh.exe
          tar -vzcf windows.tgz explodesh.exe
          rm explodesh.exe
      - name: 'Download MacOS binary'
        uses: actions/download-artifact@v2
        with:
          name: explodesh-macos
      - name: Package MacOS Tarball
        run: |
          chmod +x explodesh
          tar -vzcf macos.tgz explodesh
          rm explodesh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            # explodesh ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux.tgz
          asset_name: explodesh-${{ steps.version.outputs.version }}-linux.tgz
          asset_content_type: application/gzip
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows.tgz
          asset_name: explodesh-${{ steps.version.outputs.version }}-windows.tgz
          asset_content_type: application/gzip
      - name: Upload MacOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos.tgz
          asset_name: explodesh-${{ steps.version.outputs.version }}-macos.tgz
          asset_content_type: application/gzip
