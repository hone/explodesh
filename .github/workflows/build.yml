name: Build

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Tests
        uses: heroku/rust-cargo-musl-action@v1
        with:
          command: 'test'
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Compile Rust'
        id: compile
        uses: hone/heroku-rust-cargo-musl-action@v1
        with:
          command: 'build'
      - uses: actions/upload-artifact@v2
        with:
          name: explodesh
          path: ${{ steps.compile.outputs.release-dir }}/explodesh
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 'Get Version'
        run: |
          [[ $GITHUB_REF =~ ^refs\/tags\/(.*)$ ]] && version=${BASH_REMATCH[1]}
          echo "::set-env name=VERSION::$version"
      - name: 'Download list binary'
        uses: actions/download-artifact@v2
        with:
          name: explodesh
      - name: Package Tarball
        run: |
          chmod +x explodesh
          tar -vzcf linux.tgz explodesh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            # explodesh ${{ env.VERSION }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux.tgz
          asset_name: explodesh-${{ env.VERSION }}-linux.tgz
          asset_content_type: application/gzip
